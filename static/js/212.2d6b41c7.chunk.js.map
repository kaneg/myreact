{"version":3,"file":"static/js/212.2d6b41c7.chunk.js","mappings":"6NAKaA,EAAU,WACnB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAxCG,EAAA,GAAgBA,EAAA,GAMlC,OACIE,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CAACC,MAAOC,EAAAA,EAAgBJ,SAAA,EACvCD,EAAAA,EAAAA,KAACM,EAAAA,EAAG,KACJN,EAAAA,EAAAA,KAACO,EAAAA,EAAY,CAAAN,SAAC,oBAI1B,EAEA,W,4GClBIO,GAAoB,EAyFxB,EA7DqB,SAAHC,GAAuC,IAAlCR,EAAQQ,EAARR,SACnBN,GAA4BC,EAAAA,EAAAA,WAAkB,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7Ce,EAAMZ,EAAA,GAAEa,EAASb,EAAA,GACxBc,GAA4BhB,EAAAA,EAAAA,WAAkB,GAAMiB,GAAAd,EAAAA,EAAAA,GAAAa,EAAA,GAA7CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GA0CxB,OAFAG,EAAAA,EAAAA,YAtCc,WACNR,IAGJA,GAAoB,EACpBS,QAAQC,IAAI,aACZC,MAAM,8BAA+B,CAACC,KAAM,UAAWC,MAAO,aACzDC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACgB,IAAIC,gBAAgBC,SAASC,SAASC,QACxCC,IAAI,WACjBb,QAAQC,IAAI,UACZP,GAAU,GACVH,GAAoB,GAEpBO,GAAU,EAGlB,IAAGgB,OAAM,WAEb,IACJ,GAiBiB,IAGbrB,GACIV,EAAAA,EAAAA,KAAA,OAAAC,SAAMA,IAEFa,GACId,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,QAAO/B,UAClBD,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACC,QAhBd,WAPdC,OAAOC,iBAAiB,WAAW,SAACC,GAChC1B,GAAU,GACVH,GAAoB,EACpBS,QAAQC,IAAImB,EAChB,IA1DY,SAACC,EAAaC,EAAeC,EAAWC,GAExD,IAAMC,OAAuCC,IAAtBR,OAAOS,WAA2BT,OAAOS,WAAaT,OAAOU,QAC9EC,OAAqCH,IAArBR,OAAOY,UAA0BZ,OAAOY,UAAYZ,OAAOa,QAE3EC,EAAQd,OAAOe,WAAaf,OAAOe,WAAavB,SAASwB,gBAAgBC,YAAczB,SAASwB,gBAAgBC,YAAcjB,OAAOkB,OAAOJ,MAC5IK,EAASnB,OAAOoB,YAAcpB,OAAOoB,YAAc5B,SAASwB,gBAAgBK,aAAe7B,SAASwB,gBAAgBK,aAAerB,OAAOkB,OAAOC,OAEjJG,EAAaR,EAAQd,OAAOkB,OAAOK,WACnCC,GAAQV,EAAQT,GAAK,EAAIiB,EAAaf,EACtCkB,GAAON,EAASb,GAAK,EAAIgB,EAAaX,EACtCe,EAAY1B,OAAO2B,KAAKxB,EAAKC,EAAM,wCAADwB,OAG9BvB,EAAIiB,EAAU,qBAAAM,OACbtB,EAAIgB,EAAU,kBAAAM,OACjBH,EAAG,mBAAAG,OACFJ,EAAI,aAITE,QAA8BlB,IAAjBR,OAAO6B,OACpBH,EAAUG,OAElB,CAyCQC,CAFYtC,SAASC,SAASsC,KAAKC,QAAQxC,SAASC,SAASwC,KAAM,WAElD,QAAS,IAAK,IACnC,EAWmDnE,SAAC,iCAGpCD,EAAAA,EAAAA,KAAA,OAAKgC,UAAU,QAAO/B,UAClBD,EAAAA,EAAAA,KAACqE,EAAAA,EAAO,CAACC,cAAe,WAIhD,C","sources":["features/auth/App.tsx","features/auth/AuthRequired.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport AuthRequired from \"./AuthRequired\";\nimport Nav from \"../nav/Nav\";\nimport {FluentProvider, teamsLightTheme} from \"@fluentui/react-components\";\n\nexport const AuthApp = () => {\n    const [currentDate, setCurrentDate] = useState(new Date());\n\n    function abc() {\n        return currentDate.toTimeString();\n    }\n\n    return (\n        <div>\n            <FluentProvider theme={teamsLightTheme}>\n            <Nav/>\n            <AuthRequired>Hello, Kane</AuthRequired>\n            </FluentProvider>\n        </div>\n    );\n};\n\nexport default AuthApp;\n","import React, {useEffect, useState} from \"react\";\nimport {Button, Spinner} from \"@fluentui/react-components\";\nimport './AuthRequired.css'\n\nlet isLoginInProgress = false\n\nconst popupCenter = (url: string, title: string, w: number, h: number) => {\n    // Fixes dual-screen position                             Most browsers      Firefox\n    const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n    const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n    const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n\n    const systemZoom = width / window.screen.availWidth;\n    const left = (width - w) / 2 / systemZoom + dualScreenLeft\n    const top = (height - h) / 2 / systemZoom + dualScreenTop\n    const newWindow = window.open(url, title,\n        `\n      scrollbars=yes,\n      width=${w / systemZoom}, \n      height=${h / systemZoom}, \n      top=${top}, \n      left=${left}\n      `\n    )\n\n    if (newWindow && window.focus !== undefined) {\n        newWindow.focus();\n    }\n}\n\nconst AuthRequired = ({children}: { children: any }) => {\n    const [authed, setAuthed] = useState<boolean>(false);\n    const [failed, setFailed] = useState<boolean>(false);\n\n    const login = () => {\n        if (isLoginInProgress) {\n            return;\n        }\n        isLoginInProgress = true\n        console.log(\"Login ...\")\n        fetch('https://httpbin.org/delay/0', {mode: 'no-cors', cache: \"no-cache\"})\n            .then((rsp) => rsp.text())\n            .then((data: any) => {\n                let searchParams = new URLSearchParams(document.location.search);\n                if (searchParams.has('authed')) {\n                    console.log(\"authed\")\n                    setAuthed(true)\n                    isLoginInProgress = false\n                } else {\n                    setFailed(true)\n                }\n\n            }).catch(() => {\n\n        });\n    };\n\n    const listen = () => {\n        window.addEventListener(\"message\", (event) => {\n            setAuthed(true)\n            isLoginInProgress = false\n            console.log(event)\n        });\n    }\n\n    const showLogin = () => {\n        listen()\n        const url = document.location.href.replace(document.location.hash, '#authed')\n\n        popupCenter(url, \"login\", 600, 320)\n    }\n\n    useEffect(login, []);\n\n    return (\n        authed ?\n            <div>{children}</div>\n            : (\n                failed ?\n                    <div>\n                        <div className=\"Login\">\n                            <Button onClick={showLogin}>You need to login first</Button>\n                        </div>\n                    </div> :\n                    <div className=\"Login\">\n                        <Spinner labelPosition={\"after\"}/>\n                    </div>\n            )\n    )\n}\n\nexport default AuthRequired"],"names":["AuthApp","_useState","useState","Date","_useState2","_slicedToArray","_jsx","children","_jsxs","FluentProvider","theme","teamsLightTheme","Nav","AuthRequired","isLoginInProgress","_ref","authed","setAuthed","_useState3","_useState4","failed","setFailed","useEffect","console","log","fetch","mode","cache","then","rsp","text","data","URLSearchParams","document","location","search","has","catch","className","Button","onClick","window","addEventListener","event","url","title","w","h","dualScreenLeft","undefined","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","availWidth","left","top","newWindow","open","concat","focus","popupCenter","href","replace","hash","Spinner","labelPosition"],"sourceRoot":""}