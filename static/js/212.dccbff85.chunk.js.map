{"version":3,"file":"static/js/212.dccbff85.chunk.js","mappings":"6NAKaA,EAAU,WACnB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAIC,MAAOC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAxCG,EAAA,GAAgBA,EAAA,GAMlC,OACIE,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAc,CAACC,MAAOC,EAAAA,EAAgBJ,SAAA,EACvCD,EAAAA,EAAAA,KAACM,EAAAA,EAAG,KACJN,EAAAA,EAAAA,KAACO,EAAAA,EAAY,CAAAN,SAAC,oBAI1B,EAEA,W,kECnBIO,GAAoB,EA4DxB,IA3DqB,SAAHC,GAAuC,IAAlCR,EAAQQ,EAARR,SACnBN,GAA4BC,EAAAA,EAAAA,WAAkB,GAAME,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA7Ce,EAAMZ,EAAA,GAAEa,EAASb,EAAA,GA2BlBc,EAAY,WAPdC,OAAOC,iBAAiB,WAAW,SAACC,GAChCJ,GAAU,GACVH,GAAoB,EACpBQ,QAAQC,IAAIF,EAChB,IAKA,IACMG,EAAMC,SAASC,SAASC,KAAKC,QAAQH,SAASC,SAASG,KAAM,WAC7DC,EAASX,OAAOY,KAClBP,EACA,gBAJmB,yCAOvBF,QAAQC,IAAI,UAAWO,GACT,MAAVA,IACAA,EAAOE,QAAU,WACbV,QAAQC,IAAI,iBACZT,GAAoB,CACxB,EAER,EAGA,OAFAmB,EAAAA,EAAAA,YA1Cc,WACNnB,IAGJA,GAAoB,EACpBQ,QAAQC,IAAI,aACZW,MAAM,iCAAkC,CAACC,KAAM,UAAWC,MAAO,aAC5DC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GACHlB,QAAQC,IAAI,UACZN,GAAU,GACVH,GAAoB,CACxB,IAAG2B,OAAM,WACTvB,GACJ,IACJ,GA2BiB,IAGbF,GACIV,EAAAA,EAAAA,KAAA,OAAAC,SAAMA,KAENC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACgD,cAE5CD,EAAAA,EAAAA,KAACoC,EAAAA,EAAO,CAACC,MAAO,MAGhC,C","sources":["features/auth/App.tsx","features/auth/AuthRequired.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport AuthRequired from \"./AuthRequired\";\nimport Nav from \"../nav/Nav\";\nimport {FluentProvider, teamsLightTheme} from \"@fluentui/react-components\";\n\nexport const AuthApp = () => {\n    const [currentDate, setCurrentDate] = useState(new Date());\n\n    function abc() {\n        return currentDate.toTimeString();\n    }\n\n    return (\n        <div>\n            <FluentProvider theme={teamsLightTheme}>\n            <Nav/>\n            <AuthRequired>Hello, Kane</AuthRequired>\n            </FluentProvider>\n        </div>\n    );\n};\n\nexport default AuthApp;\n","import React, {useEffect, useState} from \"react\";\nimport {Spinner} from \"@fluentui/react-components\";\n\nlet isLoginInProgress = false\nconst AuthRequired = ({children}: { children: any }) => {\n    const [authed, setAuthed] = useState<boolean>(false);\n\n    const login = () => {\n        if (isLoginInProgress) {\n            return;\n        }\n        isLoginInProgress = true\n        console.log(\"Login ...\")\n        fetch('http://localhost:8000/auth.txt', {mode: 'no-cors', cache: \"no-cache\"})\n            .then((rsp) => rsp.text())\n            .then((data: any) => {\n                console.log(\"authed\")\n                setAuthed(true)\n                isLoginInProgress = false\n            }).catch(() => {\n            showLogin()\n        });\n    };\n\n    const listen = () => {\n        window.addEventListener(\"message\", (event) => {\n            setAuthed(true)\n            isLoginInProgress = false\n            console.log(event)\n        });\n    }\n\n    const showLogin = () => {\n        listen()\n        const windowFeatures = \"left=100,top=100,width=320,height=320\";\n        const url = document.location.href.replace(document.location.hash, '#authed')\n        const handle = window.open(\n            url,\n            \"mozillaWindow\",\n            windowFeatures,\n        );\n        console.log(\"handle:\", handle)\n        if (handle != null) {\n            handle.onclose = function () {\n                console.log(\"closed window\")\n                isLoginInProgress = false\n            }\n        }\n    }\n    useEffect(login, []);\n\n    return (\n        authed ?\n            <div>{children}</div>\n            :\n            <div>\n                {/*<button onClick={login}>Login</button>*/}\n                Loading...\n                <Spinner delay={1}/>\n            </div>\n    )\n}\n\nexport default AuthRequired"],"names":["AuthApp","_useState","useState","Date","_useState2","_slicedToArray","_jsx","children","_jsxs","FluentProvider","theme","teamsLightTheme","Nav","AuthRequired","isLoginInProgress","_ref","authed","setAuthed","showLogin","window","addEventListener","event","console","log","url","document","location","href","replace","hash","handle","open","onclose","useEffect","fetch","mode","cache","then","rsp","text","data","catch","Spinner","delay"],"sourceRoot":""}